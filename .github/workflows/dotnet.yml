name: Automated Release

on:
  pull_request:
    branches:
      - main
      - df-main
    types: [closed]

jobs:
  build:
    if: ${{ github.event.pull_request.merged }}
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v2
      - name: prepare data
        run: |
          zip -qr "${{ github.event.repository.name }}.zip" Config LICENSE.md ModInfo.xml README.md Quartz.dll QuartzLoader.dll SearchIndex.dll
          version=$(sed -n '/Version/{s/.*<Version value=\"\(.*\)\"[ ]*\/>.*/\1/;p}' ModInfo.xml)
          echo "version=$version" >> $GITHUB_ENV
          prerelease=$([[ $version = 0* ]] && echo "true" || echo "false")
          echo "prerelease=$prerelease" >> $GITHUB_ENV
      - uses: ncipollo/release-action@v1
        with:
          tag: ${{ env.version }}
          commit: main
          name: "SearchIndex v${{ env.version }} Release"
          body: ${{ github.event.pull_request.body }}
          generateReleaseNotes: true
          artifacts: "${{ github.event.repository.name }}.zip"
          prerelease: ${{ env.prerelease }}
          draft: true
